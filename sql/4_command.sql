-- --------------------------------------------------------
-- Host:                         192.168.1.8
-- Server version:               5.1.63-0+squeeze1 - (Debian)
-- Server OS:                    debian-linux-gnu
-- HeidiSQL version:             7.0.0.4053
-- Date/time:                    2012-07-30 09:09:19
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!40014 SET FOREIGN_KEY_CHECKS=0 */;

-- Dumping structure for table world.command
CREATE TABLE IF NOT EXISTS `command` (
  `name` varchar(50) NOT NULL DEFAULT '',
  `security` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `help` longtext,
  PRIMARY KEY (`name`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 ROW_FORMAT=FIXED COMMENT='Chat System';

-- Dumping data for table world.command: 434 rows
/*!40000 ALTER TABLE `command` DISABLE KEYS */;
REPLACE INTO `command` (`name`, `security`, `help`) VALUES
	('account create', 4, 'Syntax: .account create $account $password\r\n\r\nCreate account and set password to it.'),
	('account delete', 4, 'Syntax: .account delete $account\r\n\r\nDelete account with all characters.'),
	('account lock', 4, 'Syntax: .account lock [on|off]\r\n\r\nAllow login from account only from current used IP or remove this requirement.'),
	('account onlinelist', 4, 'Syntax: .account onlinelist\r\n\r\nShow list of online accounts.'),
	('account password', 4, 'Syntax: .account password $old_password $new_password $new_password\r\n\r\nChange your account password.'),
	('account set addon', 4, 'Syntax: .account set addon [$account] #addon\r\n\r\nSet user (possible targeted) expansion addon level allowed. Addon values: 0 - normal, 1 - tbc, 2 - wotlk.'),
	('account set gmlevel', 4, 'Syntax: .account set gmlevel [$account] #level [#realmid]\r\n\r\nSet the security level for targeted player (can\'t be used at self) or for account $name to a level of #level on the realm #realmID.\r\n\r\n#level may range from 0 to 3.\r\n\r\n#reamID may be -1 for all realms.'),
	('account set password', 4, 'Syntax: .account set password $account $password $password\r\n\r\nSet password for account.'),
	('account set', 4, 'Syntax: .account set $subcommand\nType .account set to see the list of possible subcommands or .help account set $subcommand to see info on subcommands'),
	('account', 0, 'Syntax: .account\r\nDisplays the access level of your account.'),
	('additem', 0, 'Syntax: .additem <itemid> / [itemname] / shift-click-item-link <count>\r\nAdds the specified number of items of id <itemid> (or exact name [itemname] in brackets, or link created by shift-click at item in inventory or recipe) to your or selected character inventory. If <itemcount> is omitted, only one item will be added.'),
	('additemset', 0, 'Syntax: .additemset <itemsetid>\r\nAdds items from itemset of id <itemsetid> to your or selected character inventory. Will add one copy of each item from itemset.'),
	('systemannounce', 3, 'Syntax: .announce $MessageToBroadcast\r\n\r\nSend a global message to all players online in chat log.'),
	('aura', 2, 'Syntax: .aura <spellid>\r\nAdds the aura from spell <spellid> to the selected unit.'),
	('ban account', 3, 'Syntax: .ban account $Name $bantime $reason\r\nBan account kick player.\r\n$bantime: negative value leads to permban, otherwise use a timestring like "4d20h3s".'),
	('ban character', 3, 'Syntax: .ban character $Name $bantime $reason\nBan character and kick player.\n$bantime: negative value leads to permban, otherwise use a timestring like "4d20h3s".'),
	('ban ip', 3, 'Syntax: .ban ip $Ip $bantime $reason\r\nBan IP.\r\n$bantime: negative value leads to permban, otherwise use a timestring like "4d20h3s".'),
	('ban', 3, 'Syntax: .ban $subcommand\nType .ban to see the list of possible subcommands or .help ban $subcommand to see info on subcommands'),
	('baninfo account', 3, 'Syntax: .baninfo account $accountid\r\nWatch full information about a specific ban.'),
	('baninfo character', 3, 'Syntax: .baninfo character $charactername \r\nWatch full information about a specific ban.'),
	('baninfo ip', 3, 'Syntax: .baninfo ip $ip\r\nWatch full information about a specific ban.'),
	('baninfo', 3, 'Syntax: .baninfo $subcommand\nType .baninfo to see the list of possible subcommands or .help baninfo $subcommand to see info on subcommands'),
	('bank', 0, 'Syntax: .bank\r\nShows your bank inventory.'),
	('banlist account', 3, 'Syntax: .banlist account [$Name]\r\nSearches the banlist for a account name pattern or show full list account bans.'),
	('banlist character', 3, 'Syntax: .banlist character $Name\r\nSearches the banlist for a character name pattern. Pattern required.'),
	('banlist ip', 3, 'Syntax: .banlist ip [$Ip]\r\nSearches the banlist for a IP pattern or show full list of IP bans.'),
	('banlist', 3, 'Syntax: .banlist $subcommand\nType .banlist to see the list of possible subcommands or .help banlist $subcommand to see info on subcommands'),
	('bindsight', 4, 'Syntax: .bindsight\r\n\r\nBinds vision to the selected unit indefinitely. Cannot be used while currently possessing a target.'),
	('cast back', 3, 'Syntax: .cast back #spellid [triggered]\r\n  Selected target will cast #spellid to your character. If \'trigered\' or part provided then spell casted with triggered flag.'),
	('cast dist', 3, 'Syntax: .cast dist #spellid [#dist [triggered]]\r\n  You will cast spell to pint at distance #dist. If \'trigered\' or part provided then spell casted with triggered flag. Not all spells can be casted as area spells.'),
	('cast self', 3, 'Syntax: .cast self #spellid [triggered]\r\nCast #spellid by target at target itself. If \'trigered\' or part provided then spell casted with triggered flag.'),
	('cast target', 3, 'Syntax: .cast target #spellid [triggered]\r\n  Selected target will cast #spellid to his victim. If \'trigered\' or part provided then spell casted with triggered flag.'),
	('cast', 1, 'Syntax: .cast <spellid>\r\nCasts <spellid> to selected target. If no target selected casts to self.'),
	('character customize', 0, 'Syntax: .character customize <name>\r\nAllows you to customize your character at next login.'),
	('character erase', 4, 'Syntax: .character erase $name\r\n\r\nDelete character $name. Character finally deleted in case any deleting options.'),
	('character level', 4, 'Syntax: .character level <playername> <level>\r\n\r\nChanges character\'s (yours or targeted) level to <level>. Level can range from 1 to 80. \r\n\r\n'),
	('modify announcecolor', 1, 'Syntax: .modify announcecolor <colorid>\r\nSets your announce chat color to <colorid>. Use .colors for the list of available announce colors.'),
	('ticket complete', 4, NULL),
	('dev', 3, 'Syntax: .dev on / off\r\nEnables or disables Developer tag next to your name.'),
	('modify nudgedistance', 0, 'Syntax: .modify nudgedistance <value>\r\nModifies distance traveled when using .nudge. Values can range from -50 to 50.'),
	('character rename', 0, 'Syntax: .character rename <name>\r\nAllows you to rename your character at next login.'),
	('cheat power', 0, 'Syntax: .cheat power on / off\r\nWhen enabled, you don\'t use mana, power, runes, or energy.'),
	('combatstop', 0, 'Syntax: .combatstop\r\nStops combat for selected character.'),
	('cometome', 3, 'SYntax: .cometome $parameter\nMake selected creature come to your current location (new position not saved to DB).'),
	('commands', 0, 'Syntax: .commands\r\nDisplays a list of available commands for your account level.'),
	('clearcooldowns', 0, 'Syntax: .clearcooldowns <spellid>\r\nRemoves all (if <spellid> not provided) cooldowns from selected character.'),
	('dealdamage', 3, 'Syntax: .damage $damage_amount [$school [$spellid]]\r\n\r\nApply $damage to target. If not $school and $spellid provided then this flat clean melee damage without any modifiers. If $school provided then damage modified by armor reduction (if school physical), and target absorbing modifiers and result applied as melee damage to target. If spell provided then damage modified and applied as spell damage. $spellid can be shift-link.'),
	('debug arena', 3, 'Syntax: .debug arena\r\n\r\nToggle debug mode for arenas. In debug mode GM can start arena with single player.'),
	('debug bg', 3, 'Syntax: .debug bg\r\n\r\nToggle debug mode for battlegrounds. In debug mode GM can start battleground with single player.'),
	('debug Mod32Value', 3, 'Syntax: .debug Mod32Value #field #value\r\n\r\nAdd #value to field #field of your character.'),
	('debug play cinematic', 3, 'Syntax: .debug play cinematic #cinematicid\r\n\r\nPlay cinematic #cinematicid for you. You stay at place while your mind fly.\r\n'),
	('debug play movie', 3, 'Syntax: .debug play movie #movieid\r\n\r\nPlay movie #movieid for you.'),
	('debug play sound', 3, 'Syntax: .debug play sound #soundid\r\n\r\nPlay sound with #soundid.\r\nSound will be play only for you. Other players do not hear this.\r\nWarning: client may have more 5000 sounds...'),
	('debug', 3, 'Syntax: .debug $subcommand\nType .debug to see the list of possible subcommands or .help debug $subcommand to see info on subcommands'),
	('demorph', 0, 'Syntax: .demorph\r\nDemorphs the selected player.'),
	('kill', 0, 'Syntax: .kill\r\nKills the selected player or creature. If no player or creature is selected, it will kill you.'),
	('dismount', 0, 'Syntax: .dismount\r\nDismounts you, if you are mounted.'),
	('getdistance', 3, 'Syntax: .distance\r\n\r\nDisplay the distance from your character to the selected creature.'),
	('event activelist', 3, 'Syntax: .event activelist\r\nShow list of currently active events.'),
	('event start', 3, 'Syntax: .event start #event_id\r\nStart event #event_id. Set start time for event to current moment (change not saved in DB).'),
	('event stop', 3, 'Syntax: .event stop #event_id\r\nStop event #event_id. Set start time for event to time in past that make current moment is event stop time (change not saved in DB).'),
	('event', 3, 'Syntax: .event #event_id\r\nShow details about event with #event_id.'),
	('cheat explore', 0, 'Syntax: .cheat explore 0 / 1\r\nReveals or hides all your maps.\r\nUse value 1 to reveal or value 0 to hide maps.'),
	('flusharenapoints', 3, 'Syntax: .flusharenapoints\r\n\r\nUse it to distribute arena points based on arena team ratings, and start a new week.'),
	('freeze', 2, 'Syntax: .freeze <name>\r\nFreezes the selected player or player with name <name> in place.'),
	('gm chat', 2, 'Syntax: .gm chat on / off\r\nEnables or disables GM badge next to your name in chat.'),
	('gm fly', 3, 'Syntax: .gm fly [on/off]\r\nEnable/disable gm fly mode.'),
	('gm ingame', 0, 'Syntax: .gm ingame\r\nDisplays a list of players with account level higher than 0 online.'),
	('gm list', 3, 'Syntax: .gm list\r\n\r\nDisplay a list of all Game Masters accounts and security levels.'),
	('gm visible', 3, 'Syntax: .gm visible on / off\r\nOutputs current visibility state or makes you visible (on) or invisible (off) for other players.'),
	('gm', 0, 'Syntax: .gm on / off\r\nEnables or disables Game Master tag next to your name.'),
	('gmannounce', 2, 'Syntax: .gmannounce <announcement>\r\nSends an announcement to all online staff members.'),
	('gmwannounce', 2, 'Syntax: .gmnotify <announcement>\r\nDisplays a notification on the screen of all online staff members.'),
	('go creature', 3, 'Syntax: .go creature #creature_guid\r\nTeleport your character to creature with guid #creature_guid.\r\n.gocreature #creature_name\r\nTeleport your character to creature with this name.\r\n.gocreature id #creature_id\r\nTeleport your character to a creature that was spawned from the template with this entry.\r\n*If* more than one creature is found, then you are teleported to the first that is found inside the database.'),
	('go graveyard', 3, 'Syntax: .go graveyard #graveyardId\r\n Teleport to graveyard with the graveyardId specified.'),
	('go grid', 3, 'Syntax: .go grid #gridX #gridY [#mapId]\r\n\r\nTeleport the gm to center of grid with provided indexes at map #mapId (or current map if it not provided).'),
	('go object', 3, 'Syntax: .go object #object_guid\r\nTeleport your character to gameobject with guid #object_guid'),
	('go taxinode', 3, 'Syntax: .go taxinode #taxinode\r\n\r\nTeleport player to taxinode coordinates. You can look up zone using .lookup taxinode $namepart'),
	('go ticket', 3, 'Syntax: .go ticket #ticketid\r\nTeleports the user to the location where $ticketid was created.'),
	('go trigger', 3, 'Syntax: .go trigger #trigger_id\r\n\r\nTeleport your character to areatrigger with id #trigger_id. Character will be teleported to trigger target if selected areatrigger is telporting trigger.'),
	('worldport', 0, 'Syntax: .worldport x y z <mapid>\r\nTeleports you to a specified point with x, y, z coordinates at ground level at map <mapid> or same map if <mapid> not provided.'),
	('go zonexy', 3, 'Syntax: .go zonexy #x #y [#zone]\r\n\r\nTeleport player to point with (#x,#y) client coordinates at ground(water) level in zone #zoneid or current zone if #zoneid not provided. You can look up zone using .lookup area $namepart'),
	('go', 3, 'Syntax: .go $subcommand\nType .go to see the list of possible subcommands or .help go $subcommand to see info on subcommands'),
	('gobject activate', 0, 'Syntax: .gobject activate <guid>\r\nActivates an object like a door or a button.'),
	('gobject delete', 0, 'Syntax: .gobject delete <guid>\r\nDeletes gameobject selected with .gobject select or guid if <guid> provided.'),
	('gobject move', 1, 'Syntax: .gobject move <guid> x y z\r\nMoves gameobject <guid> to your character\'s coordinates or to x, y, z coordinates if provided.'),
	('toggle summon', 0, 'Syntax: .toggle summon on / off\r\nIf enabled, players can\'t summon you.'),
	('gobject spawn', 0, 'Syntax: .gobject spawn <id> <flag>\r\nSpawns a temporary gameobject that is not saved to DB and despawned after server restart. You have to be a voter to save your gameobjects permanently. To do so add a <flag> (any number like 1) after object\'s id. '),
	('gobject select', 0, 'Syntax: .gobject select <id> / <namepart>\r\nLocates and shows the position of nearest gameobject, or nearest gameobject with ID or part of name specified.'),
	('gobject set phase', 1, 'Syntax: .gobject set phase <guid> <phase>\r\nChanges the phase ID of selected gameobject or using its guid to a desired phase.'),
	('gobject rotate', 1, 'Syntax: .gobject rotate <guid>\r\nSets gameobject <guid> orientation same as your character\'s orientation.'),
	('gobject', 0, 'Syntax: .gobject <subcommand>\nType .gobject to see the list of possible subcommands or .help gobject <subcommand> to see info on subcommands.'),
	('summon', 0, 'Syntax: .summon <name>\r\nTeleports the given character to you. Character can be offline.'),
	('gps', 0, 'Syntax: .gps <name>\r\n\r\nDisplays the position information for a selected character or creature. Displays your position if no <name> provided.'),
	('wpgps', 4, NULL),
	('cast dest', 3, 'Syntax: .cast dest #spellid #x #y #z [triggered]'),
	('groupsummon', 3, 'Syntax: .groupsummon [$charactername]\r\n\r\nTeleport the given character and his group to you. Teleported only online characters but original selected group member can be offline.'),
	('guid', 0, 'Syntax: .guid\r\n\r\nDisplay the GUID for the selected character.'),
	('guild create', 0, 'Syntax: .guild create <Guild Leader>  "Guild Name"\r\nCreates a guild named Guild Name with the player <Guild Leader> (or selected) as leader.  Guild name must be in quotes.'),
	('guild delete', 2, 'Syntax: .guild delete "Guild Name"\r\nDeletes guild with "Guild Name". The name must be in quotes.'),
	('guild invite', 2, 'Syntax: .guild invite <name> "Guild Name"\r\nAdds player <name> into the guild "Guild Name". Guild name must be in quotes.'),
	('guild rank', 2, 'Syntax: .guild rank <name> <rank>\r\nSets the guild rank for player <name>.'),
	('guild uninvite', 2, 'Syntax: .guild uninvite <name>\r\nRemoves player <name> from their current guild.'),
	('guild', 0, 'Syntax: .guild <subcommand>\nType .guild to see the list of possible subcommands or .help guild <subcommand> to see info on subcommands.'),
	('help', 0, 'Syntax: .help <command>\r\nDisplays usage instructions for the given <command>. If no <command> provided shows list of all available commands.'),
	('hidearea', 4, 'Syntax: .hidearea #areaid\r\n\r\nHide the area of #areaid to the selected character. If no character is selected, hide this area to you.'),
	('honor add', 0, 'Syntax: .honor add <amount>\r\nAdds a certain amount of honor (gained today) to the selected player.'),
	('honor update', 3, 'Syntax: .honor update\r\n\r\nForce the yesterday\'s honor fields to be updated with today\'s data, which will get reset for the selected player.'),
	('honor', 0, 'Syntax: .honor <subcommand>\nType .honor to see the list of possible subcommands or .help honor <subcommand> to see info on subcommands.'),
	('instance listbinds', 3, 'Syntax: .instance listbinds\r\n  Lists the binds of the selected player.'),
	('instance savedata', 3, 'Syntax: .instance savedata\r\n  Save the InstanceData for the current player\'s map to the DB.'),
	('instance stats', 3, 'Syntax: .instance stats\r\n  Shows statistics about instances.'),
	('instance unbind', 0, 'Syntax: .instance unbind <id> / <all>\r\nClears player\'s instance binds.'),
	('instance', 0, 'Syntax: .instance <subcommand>\nType .instance to see the list of possible subcommands or .help instance <subcommand> to see info on subcommands.'),
	('kick', 2, 'Syntax: .kick <name> <reason>\r\nKicks the given character name from the world with or without reason. If no character name is provided then the selected player (except for yourself) will be kicked. If no reason is provided, default is "No Reason".'),
	('learn all my talents', 0, 'Syntax: .learn all my talents\r\nTeaches the selected player or self all talents (and spells with first rank learned as talent) available for class.'),
	('learn all my spells', 0, 'Syntax: .learn all my spells\r\nTeaches the selected player or self all spells (except talents and spells with first rank learned as talent) available for class.'),
	('learn all my pettalents', 0, 'Syntax: .learn all my pettalents\r\nTeaches the selected player\'s or your pet\'s available spells.'),
	('learn all my class', 0, 'Syntax: .learn all my class\r\nTeaches the selected player or self all class spells and talents available.'),
	('learn all gm', 0, 'Syntax: .learn all gm\r\nTeaches all default spells for Game Masters.'),
	('learn all lang', 0, 'Syntax: .learn all lang\r\nTeaches all languages.'),
	('learn all default', 0, 'Syntax: .learn all default\r\nTeaches the selected player or self all default race / class spells and spells rewarded by completed quests.'),
	('learn', 0, 'Syntax: .learn <id> <all>\r\nTeaches a specified spell or skill to the selected character or self. If <all> provided then all ranks are learned.'),
	('learn all', 0, 'Syntax: .learn all\r\nTeaches the selected player or self a variety of different spells including class spells.'),
	('learn all crafts', 1, 'Syntax: .learn crafts\r\nTeaches you all professions and recipes.'),
	('levelup', 3, 'Syntax: .levelup [$playername] [#numberoflevels]\r\n\r\nIncrease/decrease the level of character with $playername (or the selected if not name provided) by #numberoflevels Or +1 if no #numberoflevels provided). If #numberoflevels is omitted, the level will be increase by 1. If #numberoflevels is 0, the same level will be restarted. If no character is selected and name not provided, increase your level. Command can be used for offline character. All stats and dependent values recalculated. At level decrease talents can be reset if need. Also at level decrease equipped items with greater level requirement can be lost.'),
	('linkgrave', 4, 'Syntax: .linkgrave #graveyard_id [alliance|horde]\r\n\r\nLink current zone to graveyard for any (or alliance/horde faction ghosts). This let character ghost from zone teleport to graveyard after die if graveyard is nearest from linked to zone and accept ghost of this faction. Add only single graveyard at another map and only if no graveyards linked (or planned linked at same map).'),
	('list auras', 3, 'Syntax: .list auras\nList auras (passive and active) of selected creature or player. If no creature or player is selected, list your own auras.'),
	('list creature', 3, 'Syntax: .list creature #creature_id [#max_count]\r\n\r\nOutput creatures with creature id #creature_id found in world. Output creature guids and coordinates sorted by distance from character. Will be output maximum #max_count creatures. If #max_count not provided use 10 as default value.'),
	('list item', 3, 'Syntax: .list item #item_id [#max_count]\r\n\r\nOutput items with item id #item_id found in all character inventories, mails, auctions, and guild banks. Output item guids, item owner guid, owner account and owner name (guild name and guid in case guild bank). Will be output maximum #max_count items. If #max_count not provided use 10 as default value.'),
	('list object', 3, 'Syntax: .list object #gameobject_id [#max_count]\r\n\r\nOutput gameobjects with gameobject id #gameobject_id found in world. Output gameobject guids and coordinates sorted by distance from character. Will be output maximum #max_count gameobject. If #max_count not provided use 10 as default value.'),
	('list', 3, 'Syntax: .list $subcommand\nType .list to see the list of possible subcommands or .help list $subcommand to see info on subcommands'),
	('waypoint reload', 1, 'Syntax: .waypoint reload <pathid>\nLoads path changes ingame. Must be applied first for new paths before .wp load <id>'),
	('reload spell_group', 3, 'Syntax: .reload spell_group\nReload spell_group table.'),
	('lookup area', 3, 'Syntax: .lookup area <namepart>\r\n\r\nLooks up an area by <namepart> and returns all matches with their area ID\'s.'),
	('lookup creature', 0, 'Syntax: .lookup creature <namepart>\r\nLooks up a creature by <namepart> and returns all matches with their creature ID\'s.'),
	('lookup event', 3, 'Syntax: .lookup event <namepart>\r\nLooks up an event by <namepart> and returns all matches with their event ID\'s.'),
	('lookup faction', 0, 'Syntax: .lookup faction <namepart>\r\nLooks up a faction by <namepart> and returns all matches with their faction ID\'s.'),
	('lookup item', 0, 'Syntax: .lookup item <itemname>\r\nLooks up an item by <itemname> and returns all matches with their Item ID\'s.'),
	('lookup itemset', 0, 'Syntax: .lookup itemset <itemname>\r\nLooks up an item set by <itemname> and returns all matches with their Item set ID\'s.'),
	('lookup map', 3, 'Syntax: .lookup map <namepart>\r\n\r\nLooks up a map by <namepart> and returns all matches with their map ID\'s.'),
	('lookup object', 0, 'Syntax: .lookup object <objectname>\r\nLooks up an gameobject by <objectname> and returns all matches with their Gameobject ID\'s.'),
	('lookup player account', 2, 'Syntax: .lookup player account <account>\r\nOutputs players which account username is <account>.'),
	('lookup player email', 2, 'Syntax: .lookup player email <email> \r\nOutputs players which account email is <email>.'),
	('lookup player ip', 2, 'Syntax: .lookup player ip <ip>\r\nOutputs players which account last_ip is <ip>.'),
	('lookup quest', 0, 'Syntax: .lookup quest <namepart>\r\nLooks up a quest by <namepart> and returns all matches with their quest ID\'s.'),
	('lookup skill', 0, 'Syntax: .lookup skill <namepart>\r\nLooks up a skill by <namepart> and returns all matches with their skill ID\'s.'),
	('lookup spell', 0, 'Syntax: .lookup spell <namepart>\r\nLooks up a spell by <namepart> and returns all matches with their spell ID\'s.'),
	('lookup taxinode', 3, 'Syntax: .lookup taxinode <substring>\r\n\r\nSearch and output all taxinodes with provide <substring> in name.'),
	('lookup tele', 2, 'Syntax: .lookup port <namepart>\r\nLooks up port by <namepart> and returns all matches with their port ID\'s.'),
	('lookup', 0, 'Syntax: .lookup <subcommand>\nType .lookup to see the list of possible subcommands or .help lookup <subcommand> to see info on subcommands.'),
	('maxskill', 0, 'Syntax: .maxskill\r\nSets all skills of the targeted player to their maximum values for its current level.'),
	('modify arenapoints', 0, 'Syntax: .modify arena <amount>\r\nAdds an <amount> of arena points to the selected player.'),
	('modify speed', 0, 'Syntax: .modify speed <value>\r\nModifies all speeds of the selected player to <value>. If no player is selected, modifies your speed. Default value is 1, <value> can range from 0,1 to 50.'),
	('modify bit', 3, 'Syntax: .modify bit #field #bit\r\n\r\nToggle the #bit bit of the #field field for the selected player. If no player is selected, modify your character.'),
	('cheat triggerpass', 0, 'Syntax: .cheat triggerpass on / off\r\nWhen enabled, you don\'t need to be in a raid group to enter a raid or instance.'),
	('toggle modify', 0, 'Syntax: .toggle modify on / off\r\nIf enabled, players can\'t use commands on you.'),
	('account setvoter ', 3, 'Syntax: account set voter $account name'),
	('modify drunkstate', 0, 'Syntax: .modify drunk <value>\r\nSets drunk level to <value> (0 - 100). Value 0 removes drunk state, value 100 is max drunken state.'),
	('modify energy', 0, 'Syntax: .modify energy <energy>\r\nModifies the energy of the selected player. If no player is selected, modifies your energy.'),
	('modify faction', 0, 'Syntax: .modify faction <factionid>\r\nModifies the faction of the selected player or creature.'),
	('toggle appear', 0, 'Syntax: .toggle appear on / off\r\nIf enabled, players can\'t appear to you.'),
	('modify gender', 0, 'Syntax: .modify gender male / female\r\nChanges gender of selected player.'),
	('modify honor', 0, 'Syntax: .modify honor <amount>\r\nAdds <amount> of honor points to the selected player.'),
	('modify hp', 0, 'Syntax: .modify hp <health>\r\nModifies the hp of the selected player. If no player is selected, modifies your hp.'),
	('modify mana', 0, 'Syntax: .modify mana <mana>\r\nModifies the mana of the selected player. If no player is selected, modifies your mana.'),
	('modify gold', 0, 'Syntax: .modify gold <amount>\r\nAdds or remove money to the selected player. If no player is selected, modifies your money, <amount> can be negative to remove money.'),
	('modify displayid', 0, 'Syntax: .modify displayid <displayid>\r\nChanges your current model id to <displayid>.'),
	('mount', 0, 'Syntax: .mount <displayid> <speed>\r\nMounts the selected player on <displayid> of a creature and sets speed to <speed> value if provided.'),
	('modify phase', 0, 'Syntax: .modify phase <phaseid>\r\nChanges the selected character\'s or your phase to <phaseid> which can range from 1-255. Default phase is 1. Players that are in different phases cannot see you.'),
	('modify rage', 0, 'Syntax: .modify rage <rage>\r\nModifies the rage of the selected player. If no player is selected, modifies your rage.'),
	('gobject near', 3, 'Syntax: .gobject near <id>'),
	('gobject target', 3, 'Syntax: .gobject target <id>'),
	('debug los', 3, 'Syntax: .debug los'),
	('modify spell', 3, 'Syntax: .modify spell'),
	('modify runicpower', 0, 'Syntax: .modify runicpower <runicpower>\r\nModifies the runic power of the selected player. If no player is selected, modifies your runic power.'),
	('modify scale', 0, 'Syntax: .modify scale <value>\nModifies size of the selected player to <value>. If no player is selected, modifies your size,<value> can range from 0.1 to 10.'),
	('cheat god', 0, 'Syntax: .cheat god on / off\r\nWhen enabled, you don\'t take damage.'),
	('cheat casttime', 0, 'Syntax: .cheat casttime on / off\r\nWhen Enabled, all of your casts are instant.'),
	('cheat cooldown', 0, 'Syntax: .cheat cooldown on / off\r\nWhen Enabled, the global cooldown doesn\'t affect you.'),
	('cheat fly', 0, 'Syntax: .cheat fly on / off\r\nAllows you to fly. Use again to disable flight.'),
	('nudge x', 0, 'Syntax: .nudge x \r\nMoves you 3 units over on the X axis.'),
	('modify talentpoints', 0, 'Syntax: .modify talentpoints <amount>\r\nSets talent points for selected character or character\'s pet. The talents will be reset upon next login.'),
	('modify', 0, 'Syntax: .modify <subcommand>\nType .modify to see the list of possible subcommands or .help modify <subcommand> to see info on subcommands.'),
	('movegens', 4, 'Syntax: .movegens\r\n  Show movement generators stack for selected creature or player.'),
	('mute', 2, 'Syntax: .mute <name> <time in minutes> <reason>\r\nDisables chat messaging for any character from account of character <name> (or currently selected) for <time in minutes> minutes. Player can be offline.'),
	('announce', 0, 'Syntax: .announce <message>\nSends an announcement to all online players.'),
	('appear', 0, 'Syntax: .appear <name>\r\nTeleports you to the given character. Either specify the character name or target a character. Character can be offline.'),
	('neargrave', 4, 'Syntax: .neargrave [alliance|horde]\r\n\r\nFind nearest graveyard linked to zone (or only nearest from accepts alliance or horde faction ghosts).'),
	('wannounce', 2, 'Syntax: .notify <announcement>\r\nSends a global message to all players online in screen.'),
	('npc set phase', 1, 'Syntax: .npc set phase <phaseid>\r\nChanges the phase ID of selected creature or using its guid to a desired phase.'),
	('npc set movetype', 3, 'Syntax: .npc set movetype [#creature_guid] stay/random/way [NODEL]\r\n\r\nSet for creature pointed by #creature_guid (or selected if #creature_guid not provided) movement type and move it to respawn position (if creature alive). Any existing waypoints for creature will be removed from the database if you do not use NODEL. If the creature is dead then movement type will applied at creature respawn.\r\nMake sure you use NODEL, if you want to keep the waypoints.'),
	('npc set model', 2, 'Syntax: .npc set model <displayid>\r\nChanges the model id of the selected creature to <displayid>.'),
	('npc set link', 3, 'Syntax: .npc set link $creatureGUID\r\n\r\nLinks respawn of selected creature to the condition that $creatureGUID defined is alive.'),
	('npc say', 3, 'Syntax: .npc say <message>\nMakes selected creature say specified message.'),
	('npc move', 1, 'Syntax: .npc move <creatureguid>\r\nMoves the selected creature spawn point to your coordinates.'),
	('npc playemote', 1, 'Syntax: .npc playemote <emoteid>\r\nMakes the selected creature play emote with an emote of id <emoteid>.'),
	('npc follow stop', 1, 'Syntax: .npc follow stop\r\nSelected creature stops following you.'),
	('npc info', 0, 'Syntax: .npc info\r\nDisplays a list of details including guid, faction, entry, display id, flags, position, etc. for the selected creature.'),
	('npc follow', 1, 'Syntax: .npc follow\r\nSelected creature starts following you until death or fight.'),
	('npc set flag', 3, 'Syntax: .npc set flag #npcflag\r\n\r\nSet the NPC flags of creature template of the selected creature and selected creature to #npcflag. NPC flags will applied to all creatures of selected creature template after server restart or grid unload/load.'),
	('npc set factionid', 1, 'Syntax: .npc set factionid <factionid>\r\nSets the faction of the selected creature to <factionid>.'),
	('npc set level', 2, 'Syntax: .npc set level <value>\r\nChanges the level of the selected creature to <value>.'),
	('npc delete', 0, 'Syntax: .npc delete <guid>\r\nDeletes creature with the guid <guid> or selected creature if no guid is provided.'),
	('npc vendor removeitem', 1, 'Syntax: .npc vendor removeitem <itemid>\r\nRemoves item <itemid> from item list of selected vendor.'),
	('npc set allowmove', 3, 'Syntax: .npc set allowmove\r\n\r\nEnable or disable movement creatures in world. Not implemented.'),
	('npc set entry', 3, 'Syntax: .npc set entry $entry\nSwitch selected creature with another entry from creature_template. - New creature.id value not saved to DB.'),
	('npc set move', 3, 'Syntax: .npc add move #creature_guid [#waittime]\r\n\r\nAdd your current location as a waypoint for creature with guid #creature_guid. And optional add wait time.'),
	('npc vendor additem', 1, 'Syntax: .npc vendor additem <itemid> <maxcount> <incrtime> <extendedcost>\r\nAdds item <itemid> to item list of the selected vendor. Also optionally you can set max count of item in vendor item list, time for item countto restore and item\'s extended cost.\r\nExample: .npc vendor additem 123456 0 0 0'),
	('npc set formation', 3, 'Syntax: .npc add formation $leader\nAdd selected creature to a leader\'s formation.'),
	('npc', 0, 'Syntax: .npc <subcommand>\nType .npc to see the list of possible subcommands or .help npc <subcommand> to see info on subcommands.'),
	('pdump load', 4, 'Syntax: .pdump load $filename $account [$newname] [$newguid]\r\nLoad character dump from dump file into character list of $account with saved or $newname, with saved (or first free) or $newguid guid.'),
	('pdump write', 4, 'Syntax: .pdump write $filename $playerNameOrGUID\r\nWrite character dump with name/guid $playerNameOrGUID to file $filename.'),
	('pdump', 4, 'Syntax: .pdump $subcommand\nType .pdump to see the list of possible subcommands or .help pdump $subcommand to see info on subcommands'),
	('pet create', 0, 'Syntax: .pet create\r\nCreates a pet of the selected creature.'),
	('pet learn', 3, 'Syntax: .pet learn\r\n\r\nLearn #spellid to pet.'),
	('pet unlearn', 3, 'Syntax: .pet unlean\r\n\r\nunLearn #spellid to pet.'),
	('pet', 0, 'Syntax: .pet <subcommand>\nType .pet to see the list of possible subcommands or .help pet <subcommand> to see info on subcommands.'),
	('playerinfo', 2, 'Syntax: .playerinfo <name>\r\nOutputs account information for selected player or player <name>.'),
	('possess', 4, 'Syntax: .possess\r\n\r\nPossesses indefinitely the selected creature.'),
	('quest add', 0, 'Syntax: .quest add <questid>\r\nAdds specified quest <questid> to the selected character or self.'),
	('quest complete', 0, 'Syntax: .quest complete <questid>\r\nMarks all quest objectives as completed for selected character\'s active quest. After this character can go and complete the quest.'),
	('quest remove', 0, 'Syntax: .quest remove <questid>\r\nSets quest <questid> state to not completed and not active for selected player.'),
	('quest', 0, 'Syntax: .quest <subcommand>\nType .quest to see the list of possible subcommands or .help quest <subcommand> to see info on subcommands'),
	('modify level', 0, 'Syntax: .modifty level <value>\r\nSets the target\'s level to <value>. Level can range from 1 to 80 for players and 1 to 81 for voters.'),
	('reload all quest', 3, 'Syntax: .reload all quest\r\n\r\nReload all quest related tables if reload support added for this table and this table can be _safe_ reloaded.'),
	('reload all npc', 3, 'Syntax: .reload all npc\nReload npc_option, npc_trainer, npc vendor, points of interest tables.'),
	('reload all loot', 3, 'Syntax: .reload all loot\r\n\r\nReload all `*_loot_template` tables. This can be slow operation with lags for server run.'),
	('reload all item', 3, 'Syntax: .reload all item\nReload page_text, item_enchantment_table tables.'),
	('reload all locales', 3, 'Syntax: .reload all locales\r\n\r\nReload all `locales_*` tables with reload support added and that can be _safe_ reloaded.'),
	('reload all gossips', 3, 'Syntax: .reload all gossips\nReload gossip_menu, gossip_menu_option, gossip_scripts, points_of_interest tables.'),
	('reload all', 3, 'Syntax: .reload all\r\n\r\nReload all tables with reload support added and that can be _safe_ reloaded.'),
	('reload areatrigger_involvedrelation', 3, 'Syntax: .reload areatrigger_involvedrelation\nReload areatrigger_involvedrelation table.'),
	('reload areatrigger_tavern', 3, 'Syntax: .reload areatrigger_tavern\nReload areatrigger_tavern table.'),
	('reload areatrigger_teleport', 3, 'Syntax: .reload areatrigger_teleport\nReload areatrigger_teleport table.'),
	('reload autobroadcast', 3, 'Syntax: .reload autobroadcast\nReload autobroadcast table.'),
	('reload command', 3, 'Syntax: .reload command\nReload command table.'),
	('reload config', 3, 'Syntax: .reload config\r\n\r\nReload config settings (by default stored in trinityd.conf). Not all settings can be change at reload: some new setting values will be ignored until restart, some values will applied with delay or only to new objects/maps, some values will explicitly rejected to change at reload.'),
	('reload creature_involvedrelation', 3, 'Syntax: .reload creature_involvedrelation\nReload creature_involvedrelation table.'),
	('reload creature_linked_respawn', 3, 'Syntax: .reload creature_linked_respawn\r\nReload creature_linked_respawn table.'),
	('reload creature_loot_template', 3, 'Syntax: .reload creature_loot_template\nReload creature_loot_template table.'),
	('reload creature_questrelation', 3, 'Syntax: .reload creature_questrelation\nReload creature_questrelation table.'),
	('reload disenchant_loot_template', 3, 'Syntax: .reload disenchant_loot_template\nReload disenchant_loot_template table.'),
	('reload event_scripts', 3, 'Syntax: .reload event_scripts\nReload event_scripts table.'),
	('reload fishing_loot_template', 3, 'Syntax: .reload fishing_loot_template\nReload fishing_loot_template table.'),
	('reload game_graveyard_zone', 3, 'Syntax: .reload game_graveyard_zone\nReload game_graveyard_zone table.'),
	('reload game_tele', 3, 'Syntax: .reload game_tele\nReload game_tele table.'),
	('reload gameobject_involvedrelation', 3, 'Syntax: .reload gameobject_involvedrelation\nReload gameobject_involvedrelation table.'),
	('reload gameobject_loot_template', 3, 'Syntax: .reload gameobject_loot_template\nReload gameobject_loot_template table.'),
	('reload gameobject_questrelation', 3, 'Syntax: .reload gameobject_questrelation\nReload gameobject_questrelation table.'),
	('reload gameobject_scripts', 3, 'Syntax: .reload gameobject_scripts\nReload gameobject_scripts table.'),
	('reload gm_tickets', 3, 'Syntax: .reload gm_tickets\nReload gm_tickets table.'),
	('reload item_enchantment_template', 3, 'Syntax: .reload item_enchantment_template\nReload item_enchantment_template table.'),
	('reload item_loot_template', 3, 'Syntax: .reload item_loot_template\nReload item_loot_template table.'),
	('reload locales_creature', 3, 'Syntax: .reload locales_creature\nReload locales_creature table.'),
	('reload locales_gameobject', 3, 'Syntax: .reload locales_gameobject\nReload locales_gameobject table.'),
	('reload locales_item', 3, 'Syntax: .reload locales_item\nReload locales_item table.'),
	('reload locales_npc_text', 3, 'Syntax: .reload locales_npc_text\nReload locales_npc_text table.'),
	('reload locales_page_text', 3, 'Syntax: .reload locales_page_text\nReload locales_page_text table.'),
	('reload locales_points_of_interest', 3, 'Syntax: .reload locales_points_of_interest\nReload locales_point_of_interest table.'),
	('reload locales_quest', 3, 'Syntax: .reload locales_quest\nReload locales_quest table.'),
	('reload milling_loot_template', 3, 'Syntax: .reload milling_loot_template\nReload milling_loot_template table.'),
	('reload npc_trainer', 3, 'Syntax: .reload npc_trainer\nReload npc_trainer table.'),
	('reload npc_vendor', 3, 'Syntax: .reload npc_vendor\nReload npc_vendor table.'),
	('reload page_text', 3, 'Syntax: .reload page_text\nReload page_text table.'),
	('reload pickpocketing_loot_template', 3, 'Syntax: .reload pickpocketing_loot_template\nReload pickpocketing_loot_template table.'),
	('reload points_of_interest', 3, 'Syntax: .reload points_of_interest\nReload points_of_interest table.'),
	('reload prospecting_loot_template', 3, 'Syntax: .reload prospecting_loot_template\nReload prospecting_loot_template table.'),
	('reload quest_end_scripts', 3, 'Syntax: .reload quest_end_scripts\nReload quest_end_scripts table.'),
	('reload mail_loot_template', 3, 'Syntax: .reload quest_mail_loot_template\nReload quest_mail_loot_template table.'),
	('reload quest_start_scripts', 3, 'Syntax: .reload quest_start_scripts\nReload quest_start_scripts table.'),
	('reload quest_template', 3, 'Syntax: .reload quest_template\nReload quest_template table.'),
	('reload reference_loot_template', 3, 'Syntax: .reload reference_loot_template\nReload reference_loot_template table.'),
	('reload reserved_name', 3, 'Syntax: .reload reserved_name\nReload reserved_name table.'),
	('reload skill_discovery_template', 3, 'Syntax: .reload skill_discovery_template\nReload skill_discovery_template table.'),
	('reload skill_extra_item_template', 3, 'Syntax: .reload skill_extra_item_template\nReload skill_extra_item_template table.'),
	('reload skill_fishing_base_level', 3, 'Syntax: .reload skill_fishing_base_level\nReload skill_fishing_base_level table.'),
	('reload skinning_loot_template', 3, 'Syntax: .reload skinning_loot_template\nReload skinning_loot_template table.'),
	('reload spell_area', 3, 'Syntax: .reload spell_area\nReload spell_area table.'),
	('reload spell_bonus_data', 3, 'Syntax: .reload spell_bonus_data\nReload spell_bonus_data table.'),
	('reload disables', 2, 'Syntax: .reload disables\r\nReloads disables table.'),
	('reload spell_group_stack_rules', 3, 'Syntax: .reload spell_group\nReload spell_group_stack_rules table.'),
	('reload spell_learn_spell', 3, 'Syntax: .reload spell_learn_spell\nReload spell_learn_spell table.'),
	('reload spell_linked_spell', 3, 'Usage: .reload spell_linked_spell\r\nReloads the spell_linked_spell DB table.'),
	('reload spell_loot_template', 3, 'Syntax: .reload spell_loot_template\nReload spell_loot_template table.'),
	('reload spell_pet_auras', 3, 'Syntax: .reload spell_pet_auras\nReload spell_pet_auras table.'),
	('reload spell_proc_event', 3, 'Syntax: .reload spell_proc_event\nReload spell_proc_event table.'),
	('reload spell_required', 3, 'Syntax: .reload spell_required\nReload spell_required table.'),
	('reload item_set_names', 3, 'Syntax: .reload item_set_names\nReload item_set_names table.'),
	('reload spell_scripts', 3, 'Syntax: .reload spell_scripts\nReload spell_scripts table.'),
	('reload spell_target_position', 3, 'Syntax: .reload spell_target_position\nReload spell_target_position table.'),
	('reload spell_threats', 3, 'Syntax: .reload spell_threats\nReload spell_threats table.'),
	('reload trinity_string', 3, 'Syntax: .reload trinity_string\nReload trinity_string table.'),
	('reload waypoint_scripts', 3, 'Syntax: .reload waypoint_scripts\nReload waypoint_scripts table.'),
	('reload', 3, 'Syntax: .reload $subcommand\nType .reload to see the list of possible subcommands or .help reload $subcommand to see info on subcommands'),
	('repairitems', 0, 'Syntax: .repairitems\r\nRepairs all selected player\'s items.'),
	('reset achievements', 3, 'Syntax: .reset achievements [$playername]\r\n\r\nReset achievements data for selected or named (online or offline) character. Achievements for persistance progress data like completed quests/etc re-filled at reset. Achievements for events like kills/casts/etc will lost.'),
	('reset all', 4, 'Syntax: .reset all spells\r\n\r\nSyntax: .reset all talents\r\n\r\nRequest reset spells or talents (including talents for all character\'s pets if any) at next login each existed character.'),
	('reset honor', 3, 'Syntax: .reset honor [Playername]\r\n  Reset all honor data for targeted character.'),
	('reset level', 3, 'Syntax: .reset level [Playername]\r\n  Reset level to 1 including reset stats and talents.  Equipped items with greater level requirement can be lost.'),
	('reset spells', 3, 'Syntax: .reset spells [Playername]\r\n  Removes all non-original spells from spellbook.\r\n. Playername can be name of offline character.'),
	('reset stats', 3, 'Syntax: .reset stats [Playername]\r\n  Resets(recalculate) all stats of the targeted player to their original VALUESat current level.'),
	('reset talents', 3, 'Syntax: .reset talents [Playername]\r\n  Removes all talents of the targeted player or pet or named player. Playername can be name of offline character. With player talents also will be reset talents for all character\'s pets if any.'),
	('reset', 3, 'Syntax: .reset $subcommand\nType .reset to see the list of possible subcommands or .help reset $subcommand to see info on subcommands'),
	('npc respawn', 0, 'Syntax: .respawn\r\nRespawns all nearest creatures and gobjects or selected creature only.'),
	('revive', 0, 'Syntax: .revive\r\nRevives the selected player. If no player is selected, it will revive you.'),
	('save', 0, 'Syntax: .save <name>\r\nSaves character with name <name>.'),
	('saveall', 2, 'Syntax: .saveall\r\nSaves all characters in game.'),
	('send items', 3, 'Syntax: .send items #playername "#subject" "#text" itemid1[:count1] itemid2[:count2] ... itemidN[:countN]\r\n\r\nSend a mail to a player. Subject and mail text must be in "". If for itemid not provided related count values then expected 1, if count > max items in stack then items will be send in required amount stacks. All stacks amount in mail limited to 12.'),
	('send mail', 3, 'Syntax: .send mail #playername "#subject" "#text"\r\n\r\nSend a mail to a player. Subject and mail text must be in "".'),
	('send message', 3, 'Syntax: .send message $playername $message\r\n\r\nSend screen message to player from ADMINISTRATOR.'),
	('send money', 3, 'Syntax: .send money #playername "#subject" "#text" #money\r\n\r\nSend mail with money to a player. Subject and mail text must be in "".'),
	('server corpses', 4, 'Syntax: .server corpses\r\n\r\nTriggering corpses expire check in world.'),
	('server exit', 4, 'Syntax: .server exit\r\n\r\nTerminate trinity-core NOW. Exit code 0.'),
	('server idlerestart cancel', 3, 'Syntax: .server idlerestart cancel\r\n\r\nCancel the restart/shutdown timer if any.'),
	('server idlerestart', 3, 'Syntax: .server idlerestart #delay\r\n\r\nRestart the server after #delay seconds if no active connections are present (no players). Use #exist_code or 2 as program exist code.'),
	('server idleshutdown cancel', 3, 'Syntax: .server idleshutdown cancel\r\n\r\nCancel the restart/shutdown timer if any.'),
	('server idleshutdown', 3, 'Syntax: .server idleshutdown #delay [#exist_code]\r\n\r\nShut the server down after #delay seconds if no active connections are present (no players). Use #exist_code or 0 as program exist code.'),
	('server info', 0, 'Syntax: .server info\r\nDisplays server version and the number of connected players.'),
	('server motd', 3, 'Syntax: .server motd\r\n\r\nShow server Message of the day.'),
	('server plimit', 3, 'Syntax: .server plimit [#num|-1|-2|-3|reset|player|moderator|gamemaster|administrator]\r\n\r\nWithout arg show current player amount and security level limitations for login to server, with arg set player linit ($num > 0) or securiti limitation ($num < 0 or security leme name. With `reset` sets player limit to the one in the config file'),
	('server restart cancel', 3, 'Syntax: .server restart cancel\r\n\r\nCancel the restart/shutdown timer if any.'),
	('server restart', 3, 'Syntax: .server restart #delay\r\n\r\nRestart the server after #delay seconds. Use #exist_code or 2 as program exist code.'),
	('server set closed', 4, 'Syntax: server set closed on/off\r\n\r\nSets whether the world accepts new client connectsions.'),
	('server set loglevel', 4, 'Syntax: .server set loglevel #level\r\n\r\nSet server log level (0 - errors only, 1 - basic, 2 - detail, 3 - debug).'),
	('server set motd', 3, 'Syntax: .server set motd $MOTD\r\n\r\nSet server Message of the day.'),
	('server shutdown cancel', 3, 'Syntax: .server shutdown cancel\r\n\r\nCancel the restart/shutdown timer if any.'),
	('server shutdown', 3, 'Syntax: .server shutdown #delay [#exit_code]\r\n\r\nShut the server down after #delay seconds. Use #exit_code or 0 as program exit code.'),
	('server', 0, 'Syntax: .server <subcommand>\nType .server to see the list of possible subcommands or .help server <subcommand> to see info on subcommands'),
	('setskill', 0, 'Syntax: .setskill <skill> <level> <max>\r\nSets a skill of id <skil> with a current skill value of <level> and a maximum value of <max> for the selected character.\r\nExample: .setskill 45 400 450'),
	('showarea', 4, 'Syntax: .showarea #areaid\r\n\r\nReveal the area of #areaid to the selected character. If no character is selected, reveal this area to you.'),
	('start', 0, 'Syntax: .start\r\nTeleports you to the starting location of your character.'),
	('cheat taxi', 0, 'Syntax: .cheat taxi on / off\r\nReveals all taxi routes for you.'),
	('ticket escalate', 4, NULL),
	('ticket response', 4, NULL),
	('recall add', 0, 'Syntax:.recall add <name>\r\nCreates recall location with specified name.'),
	('recall delete', 1, 'Syntax:.recall delete <name>\r\nRemoves specified recall location.'),
	('recall portus', 2, 'Syntax: .recall portus <location>\r\nTeleports a selected player and his group members to a given location.'),
	('recall portplayer', 2, 'Syntax: .recall portplayer <name> <location>\r\nTeleports the given character <name> to a given location. Character can be offline.'),
	('recall', 0, 'Syntax: .recall <subcommand>\r\nType .recall to see the list of possible subcommands or .help recall <subcommand> to see info on subcommands.'),
	('ticket assign', 2, 'Syntax: .ticket assign <id> <name>\r\nAssigns the specified ticket to the specified staff member.'),
	('ticket close', 2, 'Syntax: .ticket close <id>\r\nCloses the specified ticket. Does not delete it permanently.'),
	('ticket closedlist', 2, 'Syntax: .ticket closedlist\r\nDisplays a list of closed tickets.'),
	('ticket comment', 2, 'Syntax: .ticket comment <id> <comment>\r\nAllows adding or modifying of a comment to the specified ticket.'),
	('ticket delete', 3, 'Usage: .ticket delete $ticketid.\r\nDeletes the specified ticket permanently. Ticket must be closed first.'),
	('ticket list', 2, 'Syntax: .ticket list\r\nDisplays a list of open tickets.'),
	('ticket onlinelist', 2, 'Syntax: .ticket onlinelist\r\nDisplays a list of open tickets whose owners are online.'),
	('ticket unassign', 2, 'Syntax: .ticket unassign <id>\r\nUnassigns the specified ticket from the current assigned staff member.'),
	('ticket viewid', 2, 'Syntax: .ticket viewid <id>\r\nReturns details about specified ticket. Ticket must be open and not deleted.'),
	('ticket viewname', 2, 'Syntax: .ticket viewname <creatorname>\r\nReturns details about specified ticket. Ticket must be open and not deleted.'),
	('ticket', 2, 'Syntax: .ticket <subcommand>\nType .ticket to see the list of possible subcommands or .help ticket <subcommand> to see info on subcommands.'),
	('unaura', 0, 'Syntax: .unaura <spellid> / <all>\r\nRemove aura <spellid> from the selected player or creature. If <all> is used the command will remove all auras. '),
	('unban account', 3, 'Syntax: .unban account $Name\r\nUnban accounts for account name pattern.'),
	('unban character', 3, 'Syntax: .unban character $Name\r\nUnban accounts for character name pattern.'),
	('unban ip', 3, 'Syntax : .unban ip $Ip\r\nUnban accounts for IP pattern.'),
	('unban', 3, 'Syntax: .unban $subcommand\nType .unban to see the list of possible subcommands or .help unban $subcommand to see info on subcommands'),
	('unbindsight', 4, 'Syntax: .unbindsight\r\n\r\nRemoves bound vision. Cannot be used while currently possessing a target.'),
	('unfreeze', 2, 'Syntax: .unfreeze <name>\r\nUnfreezes player <name> (or selected) player.'),
	('unlearn', 0, 'Syntax: .unlearn <spellid> <all>\r\nUnlearns selected player a spell of <spellid>.  If <all> provided then all ranks are unlearned.'),
	('unmute', 2, 'Syntax: .unmute <name>\r\nRestores chat messaging for any character from account of character <name> (or selected). Character can be offline.'),
	('unpossess', 4, 'Syntax: .unpossess\r\n\r\nIf you are possessed, unpossesses yourself; otherwise unpossesses current possessed target.'),
	('cheat waterwalk', 0, 'Syntax: .cheat waterwalk on / off\r\nWhen enabled, allows you to walk on water.'),
	('modify weather', 3, 'Syntax: .wchange #weathertype #status\r\n\r\nSet current weather to #weathertype with an intensity of #status.\r\n\r\n#weathertype can be 1 for rain, 2 for snow, and 3 for sand. #status can be 0 for disabled, and 1 for enabled.'),
	('waypoint event', 3, 'Syntax: .wp event $subcommand\nType .path event to see the list of possible subcommands or .help path event $subcommand to see info on subcommands.'),
	('waypoint load', 1, 'Syntax: .waypoint load <pathid>\nLoads <pathid> number for selected creature. Creature must have no waypoint data.'),
	('waypoint show', 1, 'Syntax: .waypoint show <option>\nOptions:\non <pathid> (or selected creature with loaded path) - Shows path.\noff - Hides path.\ninfo <selected waypoint> - Shows info for selected waypoint.'),
	('waypoint unload', 1, 'Syntax: .waypoint unload\nUnload path for selected creature.'),
	('account expansion', 4, 'Syntax: .account addon #addon\nSet expansion addon level allowed. Addon values: 0 - normal, 1 - tbc, 2 - wotlk.'),
	('title remove', 0, 'Syntax: .titles remove <title>\r\nRemoves title <title> (id or shift-link) from known titles list for selected player.'),
	('title current', 3, 'Syntax: .titles current #title\r\nSet title #title (id or shift-link) as current selected titl for selected player. If title not in known title list for player then it will be added to list.'),
	('title add', 0, 'Syntax: .titles add <title>\r\nAdds title <title> (id or shift-link) to known titles list for selected player.'),
	('title set mask', 3, 'Syntax: .titles set mask #mask\r\n\r\nAllows user to use all titles from #mask.\r\n\r\n #mask=0 disables the title-choose-field'),
	('lookup title', 0, 'Syntax: .lookup title <namepart>\r\nLooks up a title by <namepart> and returns all matches with their title ID\'s and index\'s.'),
	('channel ownership', 3, 'Syntax: .channel set ownership $channel [on/off]\n\nGrant ownership to the first person that joins the channel.'),
	('reload creature_template', 3, 'Syntax: .reload creature_template $entry\r\nReload the specified creature\'s template.'),
	('character deleted delete', 4, 'Syntax: .character deleted delete #guid|$name\r\n\r\nCompletely deletes the selected characters.\r\nIf $name is supplied, only characters with that string in their name will be deleted, if #guid is supplied, only the character with that GUID will be deleted.'),
	('reload creature_onkill_reputation', 3, 'Syntax: .reload creature_onkill_reputation\r\nReload creature_onkill_reputation table.'),
	('reload conditions', 3, 'Syntax: .reload conditions\r\nReload conditions table.'),
	('reload locales_item_set_name', 3, 'Syntax: .reload locales_item_set_name\nReload locales_item_set_name table.'),
	('character deleted list', 4, 'Syntax: .character deleted list [#guid|$name]\r\n\r\nShows a list with all deleted characters.\r\nIf $name is supplied, only characters with that string in their name will be selected, if #guid is supplied, only the character with that GUID will be selected.'),
	('character deleted old', 4, 'Syntax: .character deleted old [#keepDays]\r\n\r\nCompletely deletes all characters with deleted time longer #keepDays. If #keepDays not provided the  used value from mangosd.conf option \'CharDelete.KeepDays\'. If referenced config option disabled (use 0 value) then command can\'t be used without #keepDays.'),
	('character deleted restore', 4, 'Syntax: .character deleted restore #guid|$name [$newname] [#new account]\r\n\r\nRestores deleted characters.\r\nIf $name is supplied, only characters with that string in their name will be restored, if $guid is supplied, only the character with that GUID will be restored.\r\nIf $newname is set, the character will be restored with that name instead of the original one. If #newaccount is set, the character will be restored to specific account character list. This works only with one character!'),
	('reload gossip_menu', 3, 'Syntax: .reload gossip_menu\nReload gossip_menu table.'),
	('reload gossip_menu_option', 3, 'Syntax: .reload gossip_menu_option\nReload gossip_menu_option table.'),
	('reload all scripts', 3, 'Syntax: .reload all scripts\nReload gameobject_scripts, event_scripts, quest_end_scripts, quest_start_scripts, spell_scripts, db_script_string, waypoint_scripts tables.'),
	('reload locales_gossip_menu_option', 3, 'Syntax: .reload locales_gossip_menu_option\nReload locales_gossip_menu_option table.'),
	('reload quest_poi', 3, 'Syntax: .reload quest_poi\nReload quest_poi table.'),
	('reload lfg_dungeon_rewards', 3, 'Syntax: .reload lfg_dungeon_rewards\nReload lfg_dungeon_rewards table.'),
	('character changefaction', 0, 'Syntax: .character changefaction <name>\r\nAllows you to change your character\'s faction at next login.'),
	('character changerace', 0, 'Syntax: .character changerace <name>\r\nAllows you to change your character\'s race at next login.'),
	('ban playeraccount', 3, 'Syntax: .ban playeraccount $Name $bantime $reason\nBan account and kick player.\n$bantime: negative value leads to permban, otherwise use a timestring like "4d20h3s".'),
	('achievement add', 0, 'Syntax: .achievement add <achievement>\nAdds an achievement to the targeted player.\n<achievement> can be either achievement id or achievement link.'),
	('achievement', 0, 'Syntax: .achievement <subcommand>\nType .achievement to see the list of possible subcommands or .help achievement <subcommand> to see info on subcommands.'),
	('reload creature_text', 3, 'Syntax: .reload creature_text\r\nReload creature_text table.'),
	('debug areatriggers', 3, 'Syntax: .debug areatriggers\nToggle debug mode for areatriggers. In debug mode GM will be notified if reaching an areatrigger'),
	('learn all recipes', 0, 'Syntax: .learn all recipes <profession>\rTeaches all recipes from specified profession and sets skill level to max.\rExample: .learn all recipes enchanting'),
	('npc set spawndist', 3, 'Syntax: .npc set spawndist #dist\r\n\r\nAdjust spawndistance of selected creature to dist.'),
	('npc set spawntime', 3, 'Syntax: .npc set spawntime #time \r\n\r\nAdjust spawntime of selected creature to time.'),
	('npc spawn', 0, 'Syntax: .npc spawn <id> <flag>\r\nSpawns a temporary NPC, not saved to database and despawned after dying or server restart.  You have to be a voter to save your creatures permanently. To do so add a <flag> (any number like 1) after creature\'s id. '),
	('npc textemote', 3, 'Syntax: .npc textemote <emoteid>\r\n\r\nMakes the selected creature to do textemote with an emote of id <emoteid>.'),
	('npc whisper', 3, 'Syntax: .npc whisper <playerguid> <text>\r\nMakes the selected npc whisper <text> to player with <playerguid>.'),
	('npc yell', 3, 'Syntax: .npc yell <message>\nMakes selected creature yell specified message.'),
	('waypoint add', 1, 'Syntax: .waypoint add\r\nAdds a waypoint for the selected creature at your current position.'),
	('reload all spell', 3, 'Syntax: .reload all spell\r\n\r\nReload all `spell_*` tables with reload support added and that can be _safe_ reloaded.'),
	('server togglequerylog', 4, 'Toggle SQL driver query logging.'),
	('reload access_requirement', 3, 'Syntax: .reload access_requirement\nReload access_requirement table.'),
	('reload achievement_criteria_data', 3, 'Syntax: .reload achievement_criteria_data\nReload achievement_criteria_data table.'),
	('reload achievement_reward', 3, 'Syntax: .reload achievement_reward\nReload achievement_reward table.'),
	('reload all achievement', 3, 'Syntax: .reload all achievement\r\n\r\nReload achievement_reward, achievement_criteria_data tables.'),
	('reload all area', 3, 'Syntax: .reload all area\r\n\r\nReload areatrigger_teleport, areatrigger_tavern, game_graveyard_zone tables.'),
	('reload all eventai', 3, 'Syntax: .reload all eventai\r\n\r\nReload creature_ai_scripts, creature_ai_summons, creature_ai_texts tables.'),
	('reload auctions', 3, 'Syntax: .reload auctions\nReload dynamic data tables from the database.'),
	('reload mail_level_reward', 3, 'Syntax: .reload mail_level_reward\nReload mail_level_reward table.'),
	('reload smart_scripts', 3, 'Syntax: .reload smart_scripts\nReload smart_scripts table.'),
	('reload vehicle_accessory', 3, 'Syntax: .reload vehicle_accessory\n\nReloads GUID-based vehicle accessory definitions from the database.'),
	('reload vehicle_template_accessory', 3, 'Syntax: .reload vehicle_template_accessory\n\nReloads entry-based vehicle accessory definitions from the database.'),
	('disable', 2, 'Syntax: .server disable <type> <id> <comment>'),
	('nudge y', 0, 'Syntax: .nudge y \r\nMoves you 3 units over on the Y axis.'),
	('nudge z', 0, 'Syntax: .nudge x <direction>\r\nMoves you 3 units on the Z axis in <direction> which can be either "up" or "down" .'),
	('recall port', 0, 'Syntax: .recall port <location>\r\nTeleports your character to a specified recall location.\r\nExample: .recall port Stormwind'),
	('toggle whispers', 0, 'Syntax: .toggle whispers on / off\r\nEnables or disables accepting whispers from players.'),
	('colors', 1, 'Syntax: .colors\r\nList of available announce colors. Use .setann <colorid> to change your announce color.'),
	('waypoint modify', 1, 'Syntax: .waypoint modify\r\nModifies selected waypoint.'),
	('modify standstate', 3, 'Syntax: .modify standstate <id>\r\nChanges your emote to <id>. The emote will be visible for everybody.'),
	('debug anim', 0, 'Syntax: .debug anim <id>\r\nChanges your emote to <id>. The emote will be visible for everybody.'),
	('gobject info', 0, 'Syntax: .gobject info\r\nDisplays detailed information about selected gameobject.'),
	('hello', 4, NULL),
	('modify reputation', 0, 'Syntax: .modify reputation <factionid> <repvalue> / <rankname>\r\nSets the selected players reputation with faction <factionid> to <repvalue> or to <reprank>.\r\nYou can use .lookup faction <name> to find specific faction id.'),
	('character reputation', 3, NULL),
	('character deleted', 3, NULL),
	('character titles', 3, NULL),
	('npc tame', 3, NULL),
	('itemmove', 3, NULL),
	('send', 3, NULL);
/*!40000 ALTER TABLE `command` ENABLE KEYS */;
/*!40014 SET FOREIGN_KEY_CHECKS=1 */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
